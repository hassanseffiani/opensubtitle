'use strict';

var _serializer = require('xmlrpc/lib/serializer');

var _deserializer = require('xmlrpc/lib/deserializer');

var _deserializer2 = _interopRequireDefault(_deserializer);

var _superagent = require('superagent');

var _superagent2 = _interopRequireDefault(_superagent);

var _detectNode = require('detect-node');

var _detectNode2 = _interopRequireDefault(_detectNode);

var _pify = require('pify');

var _pify2 = _interopRequireDefault(_pify);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

module.exports = function (url, encoding) {
  return function (method, params) {
    var xml = (0, _serializer.serializeMethodCall)(method, params);
    var deserializer = new _deserializer2.default(encoding || 'utf-8');
    var deserialize = (0, _pify2.default)(deserializer.deserializeMethodResponse.bind(deserializer));

    var req = _superagent2.default.post(url).send(xml);

    if (_detectNode2.default) {
      req.setEncoding = function () {}; // ¯\_(ツ)_/¯
      return deserialize(req);
    } else {
      return (0, _pify2.default)(req.end.bind(req))().then(function (res) {
        var stream = require('stream');
        var s = new stream.Readable();

        s.push(res.text);
        s.push(null);

        return deserialize(s);
      });
    }
  };
}; // inspired by https://github.com/pqx/xmlrpc-lite